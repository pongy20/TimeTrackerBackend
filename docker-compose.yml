version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: timetracker-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-timetracker}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    command: ["postgres", "-c", "listen_addresses=*"]
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: timetracker-app
    environment:
      SERVER_PORT: ${SERVER_PORT:-8080}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-timetracker}
      DB_USERNAME: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET:-123456}
      JWT_EXPIRATION_SECONDS: ${JWT_EXPIRATION_SECONDS:-2592000}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
